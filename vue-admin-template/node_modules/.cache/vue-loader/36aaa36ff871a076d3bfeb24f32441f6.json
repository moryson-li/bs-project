{"remainingRequest":"/home/moryson/Desktop/project/vue-admin-template/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/moryson/Desktop/project/vue-admin-template/node_modules/element-ui/packages/select/src/select.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/moryson/Desktop/project/vue-admin-template/node_modules/element-ui/packages/select/src/select.vue","mtime":1650942611393},{"path":"/home/moryson/Desktop/project/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":1650942601504},{"path":"/home/moryson/Desktop/project/vue-admin-template/node_modules/babel-loader/lib/index.js","mtime":1650942603644},{"path":"/home/moryson/Desktop/project/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":1650942601504},{"path":"/home/moryson/Desktop/project/vue-admin-template/node_modules/vue-loader/lib/index.js","mtime":1650942604480}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["select.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"select.vue","sourceRoot":"node_modules/element-ui/packages/select/src","sourcesContent":["<template>\n  <div\n    class=\"el-select\"\n    :class=\"[selectSize ? 'el-select--' + selectSize : '']\"\n    @click.stop=\"toggleMenu\"\n    v-clickoutside=\"handleClose\">\n    <div\n      class=\"el-select__tags\"\n      v-if=\"multiple\"\n      ref=\"tags\"\n      :style=\"{ 'max-width': inputWidth - 32 + 'px', width: '100%' }\">\n      <span v-if=\"collapseTags && selected.length\">\n        <el-tag\n          :closable=\"!selectDisabled\"\n          :size=\"collapseTagSize\"\n          :hit=\"selected[0].hitState\"\n          type=\"info\"\n          @close=\"deleteTag($event, selected[0])\"\n          disable-transitions>\n          <span class=\"el-select__tags-text\">{{ selected[0].currentLabel }}</span>\n        </el-tag>\n        <el-tag\n          v-if=\"selected.length > 1\"\n          :closable=\"false\"\n          :size=\"collapseTagSize\"\n          type=\"info\"\n          disable-transitions>\n          <span class=\"el-select__tags-text\">+ {{ selected.length - 1 }}</span>\n        </el-tag>\n      </span>\n      <transition-group @after-leave=\"resetInputHeight\" v-if=\"!collapseTags\">\n        <el-tag\n          v-for=\"item in selected\"\n          :key=\"getValueKey(item)\"\n          :closable=\"!selectDisabled\"\n          :size=\"collapseTagSize\"\n          :hit=\"item.hitState\"\n          type=\"info\"\n          @close=\"deleteTag($event, item)\"\n          disable-transitions>\n          <span class=\"el-select__tags-text\">{{ item.currentLabel }}</span>\n        </el-tag>\n      </transition-group>\n\n      <input\n        type=\"text\"\n        class=\"el-select__input\"\n        :class=\"[selectSize ? `is-${ selectSize }` : '']\"\n        :disabled=\"selectDisabled\"\n        :autocomplete=\"autoComplete || autocomplete\"\n        @focus=\"handleFocus\"\n        @blur=\"softFocus = false\"\n        @keyup=\"managePlaceholder\"\n        @keydown=\"resetInputState\"\n        @keydown.down.prevent=\"navigateOptions('next')\"\n        @keydown.up.prevent=\"navigateOptions('prev')\"\n        @keydown.enter.prevent=\"selectOption\"\n        @keydown.esc.stop.prevent=\"visible = false\"\n        @keydown.delete=\"deletePrevTag\"\n        @keydown.tab=\"visible = false\"\n        @compositionstart=\"handleComposition\"\n        @compositionupdate=\"handleComposition\"\n        @compositionend=\"handleComposition\"\n        v-model=\"query\"\n        @input=\"debouncedQueryChange\"\n        v-if=\"filterable\"\n        :style=\"{ 'flex-grow': '1', width: inputLength / (inputWidth - 32) + '%', 'max-width': inputWidth - 42 + 'px' }\"\n        ref=\"input\">\n    </div>\n    <el-input\n      ref=\"reference\"\n      v-model=\"selectedLabel\"\n      type=\"text\"\n      :placeholder=\"currentPlaceholder\"\n      :name=\"name\"\n      :id=\"id\"\n      :autocomplete=\"autoComplete || autocomplete\"\n      :size=\"selectSize\"\n      :disabled=\"selectDisabled\"\n      :readonly=\"readonly\"\n      :validate-event=\"false\"\n      :class=\"{ 'is-focus': visible }\"\n      :tabindex=\"(multiple && filterable) ? '-1' : null\"\n      @focus=\"handleFocus\"\n      @blur=\"handleBlur\"\n      @keyup.native=\"debouncedOnInputChange\"\n      @keydown.native.down.stop.prevent=\"navigateOptions('next')\"\n      @keydown.native.up.stop.prevent=\"navigateOptions('prev')\"\n      @keydown.native.enter.prevent=\"selectOption\"\n      @keydown.native.esc.stop.prevent=\"visible = false\"\n      @keydown.native.tab=\"visible = false\"\n      @paste.native=\"debouncedOnInputChange\"\n      @mouseenter.native=\"inputHovering = true\"\n      @mouseleave.native=\"inputHovering = false\">\n      <template slot=\"prefix\" v-if=\"$slots.prefix\">\n        <slot name=\"prefix\"></slot>\n      </template>\n      <template slot=\"suffix\">\n        <i v-show=\"!showClose\" :class=\"['el-select__caret', 'el-input__icon', 'el-icon-' + iconClass]\"></i>\n        <i v-if=\"showClose\" class=\"el-select__caret el-input__icon el-icon-circle-close\" @click=\"handleClearClick\"></i>\n      </template>\n    </el-input>\n    <transition\n      name=\"el-zoom-in-top\"\n      @before-enter=\"handleMenuEnter\"\n      @after-leave=\"doDestroy\">\n      <el-select-menu\n        ref=\"popper\"\n        :append-to-body=\"popperAppendToBody\"\n        v-show=\"visible && emptyText !== false\">\n        <el-scrollbar\n          tag=\"ul\"\n          wrap-class=\"el-select-dropdown__wrap\"\n          view-class=\"el-select-dropdown__list\"\n          ref=\"scrollbar\"\n          :class=\"{ 'is-empty': !allowCreate && query && filteredOptionsCount === 0 }\"\n          v-show=\"options.length > 0 && !loading\">\n          <el-option\n            :value=\"query\"\n            created\n            v-if=\"showNewOption\">\n          </el-option>\n          <slot></slot>\n        </el-scrollbar>\n        <template v-if=\"emptyText && (!allowCreate || loading || (allowCreate && options.length === 0 ))\">\n          <slot name=\"empty\" v-if=\"$slots.empty\"></slot>\n          <p class=\"el-select-dropdown__empty\" v-else>\n            {{ emptyText }}\n          </p>\n        </template>\n      </el-select-menu>\n    </transition>\n  </div>\n</template>\n\n<script type=\"text/babel\">\n  import Emitter from 'element-ui/src/mixins/emitter';\n  import Focus from 'element-ui/src/mixins/focus';\n  import Locale from 'element-ui/src/mixins/locale';\n  import ElInput from 'element-ui/packages/input';\n  import ElSelectMenu from './select-dropdown.vue';\n  import ElOption from './option.vue';\n  import ElTag from 'element-ui/packages/tag';\n  import ElScrollbar from 'element-ui/packages/scrollbar';\n  import debounce from 'throttle-debounce/debounce';\n  import Clickoutside from 'element-ui/src/utils/clickoutside';\n  import { addResizeListener, removeResizeListener } from 'element-ui/src/utils/resize-event';\n  import { t } from 'element-ui/src/locale';\n  import scrollIntoView from 'element-ui/src/utils/scroll-into-view';\n  import { getValueByPath, valueEquals, isIE, isEdge } from 'element-ui/src/utils/util';\n  import NavigationMixin from './navigation-mixin';\n  import { isKorean } from 'element-ui/src/utils/shared';\n\n  export default {\n    mixins: [Emitter, Locale, Focus('reference'), NavigationMixin],\n\n    name: 'ElSelect',\n\n    componentName: 'ElSelect',\n\n    inject: {\n      elForm: {\n        default: ''\n      },\n\n      elFormItem: {\n        default: ''\n      }\n    },\n\n    provide() {\n      return {\n        'select': this\n      };\n    },\n\n    computed: {\n      _elFormItemSize() {\n        return (this.elFormItem || {}).elFormItemSize;\n      },\n\n      readonly() {\n        return !this.filterable || this.multiple || (!isIE() && !isEdge() && !this.visible);\n      },\n\n      showClose() {\n        let hasValue = this.multiple\n          ? Array.isArray(this.value) && this.value.length > 0\n          : this.value !== undefined && this.value !== null && this.value !== '';\n        let criteria = this.clearable &&\n          !this.selectDisabled &&\n          this.inputHovering &&\n          hasValue;\n        return criteria;\n      },\n\n      iconClass() {\n        return this.remote && this.filterable ? '' : (this.visible ? 'arrow-up is-reverse' : 'arrow-up');\n      },\n\n      debounce() {\n        return this.remote ? 300 : 0;\n      },\n\n      emptyText() {\n        if (this.loading) {\n          return this.loadingText || this.t('el.select.loading');\n        } else {\n          if (this.remote && this.query === '' && this.options.length === 0) return false;\n          if (this.filterable && this.query && this.options.length > 0 && this.filteredOptionsCount === 0) {\n            return this.noMatchText || this.t('el.select.noMatch');\n          }\n          if (this.options.length === 0) {\n            return this.noDataText || this.t('el.select.noData');\n          }\n        }\n        return null;\n      },\n\n      showNewOption() {\n        let hasExistingOption = this.options.filter(option => !option.created)\n          .some(option => option.currentLabel === this.query);\n        return this.filterable && this.allowCreate && this.query !== '' && !hasExistingOption;\n      },\n\n      selectSize() {\n        return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;\n      },\n\n      selectDisabled() {\n        return this.disabled || (this.elForm || {}).disabled;\n      },\n\n      collapseTagSize() {\n        return ['small', 'mini'].indexOf(this.selectSize) > -1\n          ? 'mini'\n          : 'small';\n      }\n    },\n\n    components: {\n      ElInput,\n      ElSelectMenu,\n      ElOption,\n      ElTag,\n      ElScrollbar\n    },\n\n    directives: { Clickoutside },\n\n    props: {\n      name: String,\n      id: String,\n      value: {\n        required: true\n      },\n      autocomplete: {\n        type: String,\n        default: 'off'\n      },\n      /** @Deprecated in next major version */\n      autoComplete: {\n        type: String,\n        validator(val) {\n          process.env.NODE_ENV !== 'production' &&\n            console.warn('[Element Warn][Select]\\'auto-complete\\' property will be deprecated in next major version. please use \\'autocomplete\\' instead.');\n          return true;\n        }\n      },\n      automaticDropdown: Boolean,\n      size: String,\n      disabled: Boolean,\n      clearable: Boolean,\n      filterable: Boolean,\n      allowCreate: Boolean,\n      loading: Boolean,\n      popperClass: String,\n      remote: Boolean,\n      loadingText: String,\n      noMatchText: String,\n      noDataText: String,\n      remoteMethod: Function,\n      filterMethod: Function,\n      multiple: Boolean,\n      multipleLimit: {\n        type: Number,\n        default: 0\n      },\n      placeholder: {\n        type: String,\n        default() {\n          return t('el.select.placeholder');\n        }\n      },\n      defaultFirstOption: Boolean,\n      reserveKeyword: Boolean,\n      valueKey: {\n        type: String,\n        default: 'value'\n      },\n      collapseTags: Boolean,\n      popperAppendToBody: {\n        type: Boolean,\n        default: true\n      }\n    },\n\n    data() {\n      return {\n        options: [],\n        cachedOptions: [],\n        createdLabel: null,\n        createdSelected: false,\n        selected: this.multiple ? [] : {},\n        inputLength: 20,\n        inputWidth: 0,\n        initialInputHeight: 0,\n        cachedPlaceHolder: '',\n        optionsCount: 0,\n        filteredOptionsCount: 0,\n        visible: false,\n        softFocus: false,\n        selectedLabel: '',\n        hoverIndex: -1,\n        query: '',\n        previousQuery: null,\n        inputHovering: false,\n        currentPlaceholder: '',\n        menuVisibleOnFocus: false,\n        isOnComposition: false,\n        isSilentBlur: false\n      };\n    },\n\n    watch: {\n      selectDisabled() {\n        this.$nextTick(() => {\n          this.resetInputHeight();\n        });\n      },\n\n      placeholder(val) {\n        this.cachedPlaceHolder = this.currentPlaceholder = val;\n      },\n\n      value(val, oldVal) {\n        if (this.multiple) {\n          this.resetInputHeight();\n          if ((val && val.length > 0) || (this.$refs.input && this.query !== '')) {\n            this.currentPlaceholder = '';\n          } else {\n            this.currentPlaceholder = this.cachedPlaceHolder;\n          }\n          if (this.filterable && !this.reserveKeyword) {\n            this.query = '';\n            this.handleQueryChange(this.query);\n          }\n        }\n        this.setSelected();\n        if (this.filterable && !this.multiple) {\n          this.inputLength = 20;\n        }\n        if (!valueEquals(val, oldVal)) {\n          this.dispatch('ElFormItem', 'el.form.change', val);\n        }\n      },\n\n      visible(val) {\n        if (!val) {\n          this.broadcast('ElSelectDropdown', 'destroyPopper');\n          if (this.$refs.input) {\n            this.$refs.input.blur();\n          }\n          this.query = '';\n          this.previousQuery = null;\n          this.selectedLabel = '';\n          this.inputLength = 20;\n          this.menuVisibleOnFocus = false;\n          this.resetHoverIndex();\n          this.$nextTick(() => {\n            if (this.$refs.input &&\n              this.$refs.input.value === '' &&\n              this.selected.length === 0) {\n              this.currentPlaceholder = this.cachedPlaceHolder;\n            }\n          });\n          if (!this.multiple) {\n            if (this.selected) {\n              if (this.filterable && this.allowCreate &&\n                this.createdSelected && this.createdLabel) {\n                this.selectedLabel = this.createdLabel;\n              } else {\n                this.selectedLabel = this.selected.currentLabel;\n              }\n              if (this.filterable) this.query = this.selectedLabel;\n            }\n\n            if (this.filterable) {\n              this.currentPlaceholder = this.cachedPlaceHolder;\n            }\n          }\n        } else {\n          this.broadcast('ElSelectDropdown', 'updatePopper');\n          if (this.filterable) {\n            this.query = this.remote ? '' : this.selectedLabel;\n            this.handleQueryChange(this.query);\n            if (this.multiple) {\n              this.$refs.input.focus();\n            } else {\n              if (!this.remote) {\n                this.broadcast('ElOption', 'queryChange', '');\n                this.broadcast('ElOptionGroup', 'queryChange');\n              }\n\n              if (this.selectedLabel) {\n                this.currentPlaceholder = this.selectedLabel;\n                this.selectedLabel = '';\n              }\n            }\n          }\n        }\n        this.$emit('visible-change', val);\n      },\n\n      options() {\n        if (this.$isServer) return;\n        this.$nextTick(() => {\n          this.broadcast('ElSelectDropdown', 'updatePopper');\n        });\n        if (this.multiple) {\n          this.resetInputHeight();\n        }\n        let inputs = this.$el.querySelectorAll('input');\n        if ([].indexOf.call(inputs, document.activeElement) === -1) {\n          this.setSelected();\n        }\n        if (this.defaultFirstOption && (this.filterable || this.remote) && this.filteredOptionsCount) {\n          this.checkDefaultFirstOption();\n        }\n      }\n    },\n\n    methods: {\n      handleComposition(event) {\n        const text = event.target.value;\n        if (event.type === 'compositionend') {\n          this.isOnComposition = false;\n          this.$nextTick(_ => this.handleQueryChange(text));\n        } else {\n          const lastCharacter = text[text.length - 1] || '';\n          this.isOnComposition = !isKorean(lastCharacter);\n        }\n      },\n      handleQueryChange(val) {\n        if (this.previousQuery === val || this.isOnComposition) return;\n        if (\n          this.previousQuery === null &&\n          (typeof this.filterMethod === 'function' || typeof this.remoteMethod === 'function')\n        ) {\n          this.previousQuery = val;\n          return;\n        }\n        this.previousQuery = val;\n        this.$nextTick(() => {\n          if (this.visible) this.broadcast('ElSelectDropdown', 'updatePopper');\n        });\n        this.hoverIndex = -1;\n        if (this.multiple && this.filterable) {\n          this.$nextTick(() => {\n            const length = this.$refs.input.value.length * 15 + 20;\n            this.inputLength = this.collapseTags ? Math.min(50, length) : length;\n            this.managePlaceholder();\n            this.resetInputHeight();\n          });\n        }\n        if (this.remote && typeof this.remoteMethod === 'function') {\n          this.hoverIndex = -1;\n          this.remoteMethod(val);\n        } else if (typeof this.filterMethod === 'function') {\n          this.filterMethod(val);\n          this.broadcast('ElOptionGroup', 'queryChange');\n        } else {\n          this.filteredOptionsCount = this.optionsCount;\n          this.broadcast('ElOption', 'queryChange', val);\n          this.broadcast('ElOptionGroup', 'queryChange');\n        }\n        if (this.defaultFirstOption && (this.filterable || this.remote) && this.filteredOptionsCount) {\n          this.checkDefaultFirstOption();\n        }\n      },\n\n      scrollToOption(option) {\n        const target = Array.isArray(option) && option[0] ? option[0].$el : option.$el;\n        if (this.$refs.popper && target) {\n          const menu = this.$refs.popper.$el.querySelector('.el-select-dropdown__wrap');\n          scrollIntoView(menu, target);\n        }\n        this.$refs.scrollbar && this.$refs.scrollbar.handleScroll();\n      },\n\n      handleMenuEnter() {\n        this.$nextTick(() => this.scrollToOption(this.selected));\n      },\n\n      emitChange(val) {\n        if (!valueEquals(this.value, val)) {\n          this.$emit('change', val);\n        }\n      },\n\n      getOption(value) {\n        let option;\n        const isObject = Object.prototype.toString.call(value).toLowerCase() === '[object object]';\n        const isNull = Object.prototype.toString.call(value).toLowerCase() === '[object null]';\n        const isUndefined = Object.prototype.toString.call(value).toLowerCase() === '[object undefined]';\n\n        for (let i = this.cachedOptions.length - 1; i >= 0; i--) {\n          const cachedOption = this.cachedOptions[i];\n          const isEqual = isObject\n            ? getValueByPath(cachedOption.value, this.valueKey) === getValueByPath(value, this.valueKey)\n            : cachedOption.value === value;\n          if (isEqual) {\n            option = cachedOption;\n            break;\n          }\n        }\n        if (option) return option;\n        const label = (!isObject && !isNull && !isUndefined)\n          ? value : '';\n        let newOption = {\n          value: value,\n          currentLabel: label\n        };\n        if (this.multiple) {\n          newOption.hitState = false;\n        }\n        return newOption;\n      },\n\n      setSelected() {\n        if (!this.multiple) {\n          let option = this.getOption(this.value);\n          if (option.created) {\n            this.createdLabel = option.currentLabel;\n            this.createdSelected = true;\n          } else {\n            this.createdSelected = false;\n          }\n          this.selectedLabel = option.currentLabel;\n          this.selected = option;\n          if (this.filterable) this.query = this.selectedLabel;\n          return;\n        }\n        let result = [];\n        if (Array.isArray(this.value)) {\n          this.value.forEach(value => {\n            result.push(this.getOption(value));\n          });\n        }\n        this.selected = result;\n        this.$nextTick(() => {\n          this.resetInputHeight();\n        });\n      },\n\n      handleFocus(event) {\n        if (!this.softFocus) {\n          if (this.automaticDropdown || this.filterable) {\n            this.visible = true;\n            if (this.filterable) {\n              this.menuVisibleOnFocus = true;\n            }\n          }\n          this.$emit('focus', event);\n        } else {\n          this.softFocus = false;\n        }\n      },\n\n      blur() {\n        this.visible = false;\n        this.$refs.reference.blur();\n      },\n\n      handleBlur(event) {\n        setTimeout(() => {\n          if (this.isSilentBlur) {\n            this.isSilentBlur = false;\n          } else {\n            this.$emit('blur', event);\n          }\n        }, 50);\n        this.softFocus = false;\n      },\n\n      handleClearClick(event) {\n        this.deleteSelected(event);\n      },\n\n      doDestroy() {\n        this.$refs.popper && this.$refs.popper.doDestroy();\n      },\n\n      handleClose() {\n        this.visible = false;\n      },\n\n      toggleLastOptionHitState(hit) {\n        if (!Array.isArray(this.selected)) return;\n        const option = this.selected[this.selected.length - 1];\n        if (!option) return;\n\n        if (hit === true || hit === false) {\n          option.hitState = hit;\n          return hit;\n        }\n\n        option.hitState = !option.hitState;\n        return option.hitState;\n      },\n\n      deletePrevTag(e) {\n        if (e.target.value.length <= 0 && !this.toggleLastOptionHitState()) {\n          const value = this.value.slice();\n          value.pop();\n          this.$emit('input', value);\n          this.emitChange(value);\n        }\n      },\n\n      managePlaceholder() {\n        if (this.currentPlaceholder !== '') {\n          this.currentPlaceholder = this.$refs.input.value ? '' : this.cachedPlaceHolder;\n        }\n      },\n\n      resetInputState(e) {\n        if (e.keyCode !== 8) this.toggleLastOptionHitState(false);\n        this.inputLength = this.$refs.input.value.length * 15 + 20;\n        this.resetInputHeight();\n      },\n\n      resetInputHeight() {\n        if (this.collapseTags && !this.filterable) return;\n        this.$nextTick(() => {\n          if (!this.$refs.reference) return;\n          let inputChildNodes = this.$refs.reference.$el.childNodes;\n          let input = [].filter.call(inputChildNodes, item => item.tagName === 'INPUT')[0];\n          const tags = this.$refs.tags;\n          const sizeInMap = this.initialInputHeight || 40;\n          input.style.height = this.selected.length === 0\n            ? sizeInMap + 'px'\n            : Math.max(\n              tags ? (tags.clientHeight + (tags.clientHeight > sizeInMap ? 6 : 0)) : 0,\n              sizeInMap\n            ) + 'px';\n          if (this.visible && this.emptyText !== false) {\n            this.broadcast('ElSelectDropdown', 'updatePopper');\n          }\n        });\n      },\n\n      resetHoverIndex() {\n        setTimeout(() => {\n          if (!this.multiple) {\n            this.hoverIndex = this.options.indexOf(this.selected);\n          } else {\n            if (this.selected.length > 0) {\n              this.hoverIndex = Math.min.apply(null, this.selected.map(item => this.options.indexOf(item)));\n            } else {\n              this.hoverIndex = -1;\n            }\n          }\n        }, 300);\n      },\n\n      handleOptionSelect(option, byClick) {\n        if (this.multiple) {\n          const value = (this.value || []).slice();\n          const optionIndex = this.getValueIndex(value, option.value);\n          if (optionIndex > -1) {\n            value.splice(optionIndex, 1);\n          } else if (this.multipleLimit <= 0 || value.length < this.multipleLimit) {\n            value.push(option.value);\n          }\n          this.$emit('input', value);\n          this.emitChange(value);\n          if (option.created) {\n            this.query = '';\n            this.handleQueryChange('');\n            this.inputLength = 20;\n          }\n          if (this.filterable) this.$refs.input.focus();\n        } else {\n          this.$emit('input', option.value);\n          this.emitChange(option.value);\n          this.visible = false;\n        }\n        this.isSilentBlur = byClick;\n        this.setSoftFocus();\n        if (this.visible) return;\n        this.$nextTick(() => {\n          this.scrollToOption(option);\n        });\n      },\n\n      setSoftFocus() {\n        this.softFocus = true;\n        const input = this.$refs.input || this.$refs.reference;\n        if (input) {\n          input.focus();\n        }\n      },\n\n      getValueIndex(arr = [], value) {\n        const isObject = Object.prototype.toString.call(value).toLowerCase() === '[object object]';\n        if (!isObject) {\n          return arr.indexOf(value);\n        } else {\n          const valueKey = this.valueKey;\n          let index = -1;\n          arr.some((item, i) => {\n            if (getValueByPath(item, valueKey) === getValueByPath(value, valueKey)) {\n              index = i;\n              return true;\n            }\n            return false;\n          });\n          return index;\n        }\n      },\n\n      toggleMenu() {\n        if (!this.selectDisabled) {\n          if (this.menuVisibleOnFocus) {\n            this.menuVisibleOnFocus = false;\n          } else {\n            this.visible = !this.visible;\n          }\n          if (this.visible) {\n            (this.$refs.input || this.$refs.reference).focus();\n          }\n        }\n      },\n\n      selectOption() {\n        if (!this.visible) {\n          this.toggleMenu();\n        } else {\n          if (this.options[this.hoverIndex]) {\n            this.handleOptionSelect(this.options[this.hoverIndex]);\n          }\n        }\n      },\n\n      deleteSelected(event) {\n        event.stopPropagation();\n        const value = this.multiple ? [] : '';\n        this.$emit('input', value);\n        this.emitChange(value);\n        this.visible = false;\n        this.$emit('clear');\n      },\n\n      deleteTag(event, tag) {\n        let index = this.selected.indexOf(tag);\n        if (index > -1 && !this.selectDisabled) {\n          const value = this.value.slice();\n          value.splice(index, 1);\n          this.$emit('input', value);\n          this.emitChange(value);\n          this.$emit('remove-tag', tag.value);\n        }\n        event.stopPropagation();\n      },\n\n      onInputChange() {\n        if (this.filterable && this.query !== this.selectedLabel) {\n          this.query = this.selectedLabel;\n          this.handleQueryChange(this.query);\n        }\n      },\n\n      onOptionDestroy(index) {\n        if (index > -1) {\n          this.optionsCount--;\n          this.filteredOptionsCount--;\n          this.options.splice(index, 1);\n        }\n      },\n\n      resetInputWidth() {\n        this.inputWidth = this.$refs.reference.$el.getBoundingClientRect().width;\n      },\n\n      handleResize() {\n        this.resetInputWidth();\n        if (this.multiple) this.resetInputHeight();\n      },\n\n      checkDefaultFirstOption() {\n        this.hoverIndex = -1;\n        // highlight the created option\n        let hasCreated = false;\n        for (let i = this.options.length - 1; i >= 0; i--) {\n          if (this.options[i].created) {\n            hasCreated = true;\n            this.hoverIndex = i;\n            break;\n          }\n        }\n        if (hasCreated) return;\n        for (let i = 0; i !== this.options.length; ++i) {\n          const option = this.options[i];\n          if (this.query) {\n            // highlight first options that passes the filter\n            if (!option.disabled && !option.groupDisabled && option.visible) {\n              this.hoverIndex = i;\n              break;\n            }\n          } else {\n            // highlight currently selected option\n            if (option.itemSelected) {\n              this.hoverIndex = i;\n              break;\n            }\n          }\n        }\n      },\n\n      getValueKey(item) {\n        if (Object.prototype.toString.call(item.value).toLowerCase() !== '[object object]') {\n          return item.value;\n        } else {\n          return getValueByPath(item.value, this.valueKey);\n        }\n      }\n    },\n\n    created() {\n      this.cachedPlaceHolder = this.currentPlaceholder = this.placeholder;\n      if (this.multiple && !Array.isArray(this.value)) {\n        this.$emit('input', []);\n      }\n      if (!this.multiple && Array.isArray(this.value)) {\n        this.$emit('input', '');\n      }\n\n      this.debouncedOnInputChange = debounce(this.debounce, () => {\n        this.onInputChange();\n      });\n\n      this.debouncedQueryChange = debounce(this.debounce, (e) => {\n        this.handleQueryChange(e.target.value);\n      });\n\n      this.$on('handleOptionClick', this.handleOptionSelect);\n      this.$on('setSelected', this.setSelected);\n    },\n\n    mounted() {\n      if (this.multiple && Array.isArray(this.value) && this.value.length > 0) {\n        this.currentPlaceholder = '';\n      }\n      addResizeListener(this.$el, this.handleResize);\n\n      const reference = this.$refs.reference;\n      if (reference && reference.$el) {\n        const sizeMap = {\n          medium: 36,\n          small: 32,\n          mini: 28\n        };\n        const input = reference.$el.querySelector('input');\n        this.initialInputHeight = input.getBoundingClientRect().height || sizeMap[this.selectSize];\n      }\n      if (this.remote && this.multiple) {\n        this.resetInputHeight();\n      }\n      this.$nextTick(() => {\n        if (reference && reference.$el) {\n          this.inputWidth = reference.$el.getBoundingClientRect().width;\n        }\n      });\n      this.setSelected();\n    },\n\n    beforeDestroy() {\n      if (this.$el && this.handleResize) removeResizeListener(this.$el, this.handleResize);\n    }\n  };\n</script>\n"]}]}